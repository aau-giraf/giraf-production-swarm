version: '3.7'

services:
    PROXY:                       # NGINX proxy service for the swarm
        image: nginx:1.18        # This will use the latest version of 1.18.x
        ports:                   # Exposes for 80 and 443 from the service to the swarm network(public)
            - '80:80'
            - '443:443'
        volumes:                 # Mounts the nginx config folder inside the container as read only
            - /swarm-nfs/nginx/:/etc/nginx/:r
            - /swarm-nfs/certbot/:/var/www/html/
        networks:                # Attaches the network
            - frontend
        deploy:                  # Deploy options
            replicas: 3          # Number er services
        healthcheck:             # Docker healthcheck restarts of the nginx service is not running three times in a row, service might be out for a maximum of 30 secunds
            test: ["CMD-SHELL", "service nginx status || exit 1"]
            interval: 10s
            timeout: 10s
            retries: 3

    API_PROD:                    # API service used for production
        image: docker.pkg.github.com/aau-giraf/web-api/web-api:latest # TODO use :latest from github packages
        networks:                # Attaches the network
            - frontend
            - backend
        environment:             # Sets local envionment for dotnet
            ASPNETCORE_ENVIRONMENT: Production
        deploy:                  # Deploy options
            replicas: 3          # Number of services
        volumes:                 # Mounts the two NFS file shares into the container
            - /swarm-nfs/cdn/prod/pictograms/:/pictograms
            - /swarm-nfs/api/appsettings.Production.json:/srv/appsettings.json
            - /swarm-nfs/api/appsettings.Production.json:/srv/out/appsettings.json
        healthcheck:             # Docker healthcheck restart of it fails three times in a row, service may be out for a maximum of 30 seconds
            test: ["CMD-SHELL", "curl --fail http://localhost:5000/v1/Status || exit 1"]
            interval: 10s
            timeout: 10s
            retries: 3

    API_DEV:                     # API service used for development
        image: docker.pkg.github.com/aau-giraf/web-api/web-api:develop # Use develop tag from GitHub Packages
        networks:                # Attaches the network
            - frontend
            - backend
        environment:             # Sets local envionment for dotnet
            ASPNETCORE_ENVIRONMENT: Development
        deploy:                  # Deploy options
            replicas: 3          # Number of services
        volumes:                 # Mounts the two NFS file shares into the container
            - /swarm-nfs/cdn/dev/pictograms/:/pictograms
            - /swarm-nfs/api/appsettings.Develop.json:/srv/appsettings.json
            - /swarm-nfs/api/appsettings.Develop.json:/srv/out/appsettings.json
        healthcheck:             # Docker healthcheck restart of it fails three times in a row, service may be out for a maximum of 30 seconds
            test: ["CMD-SHELL", "curl --fail http://localhost:5000/v1/Status || exit 1"]
            interval: 10s
            timeout: 10s
            retries: 3

    API_TEST:                    # API service for testing new versions of the API before deploying to the other services, it should not be used for any in app development.
        image: docker.pkg.github.com/aau-giraf/web-api/web-api:develop # Use develop tag from GitHub Packages
        networks:                # Attaches the network
            - frontend
            - backend
        environment:             # Sets local envionment for dotnet
            ASPNETCORE_ENVIRONMENT: Staging
        deploy:                  # Deploy options
            replicas: 2          # Number of services
        volumes:                 # Mounts the two NFS file shares into the container
            - /swarm-nfs/cdn/test/pictograms/:/pictograms
            - /swarm-nfs/api/appsettings.Testing.json:/srv/appsettings.json
            - /swarm-nfs/api/appsettings.Testing.json:/srv/out/appsettings.json
        healthcheck:             # Docker healthcheck restart of it fails three times in a row, service may be out for a maximum of 30 seconds
            test: ["CMD-SHELL", "curl --fail http://localhost:5000/v1/Status || exit 1"]
            interval: 10s
            timeout: 10s
            retries: 3

    DB:                          # The DB service will be changed to use the production database later once it has been migrated. The httpd image is only for testing.
        image: mysql:8.0.19
        ports:
            - '3306:3306'
        expose:
            - '3306'
        command: --default-authentication-plugin=mysql_native_password
        volumes:                 # Mounts the mysql files from the NFS to the container
            - /swarm-nfs/mysql/:/var/lib/mysql/
        environment:             # MySQL root password
            MYSQL_ROOT_PASSWORD: Giraf123
            MYSQL_ROOT_HOST: %
        networks:                # Attaches the network
            - backend
        deploy:                  # Deploy options
            restart_policy:      # On failure restart the service
                condition: on-failure

networks:                        # Defines networks in the swarm
    frontend:                    # Creates a new network for frontend traffic
    backend:                     # Creates a new network for backend traffic
